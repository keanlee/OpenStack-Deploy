#this file create by keanlee's script
global
  chroot  /var/lib/haproxy
  daemon
  group  haproxy
  maxconn  4000
  pidfile  /var/run/haproxy.pid
  user  haproxy

defaults
  log  global
  maxconn  4000
  option  redispatch
  retries  3
  timeout  http-request 10s
  timeout  queue 1m
  timeout  connect 10s
  timeout  client 1m
  timeout  server 1m
  timeout  check 10s

#listen haproxy_stats
#    mode http
#    bind <Virtual IP>:80
#    option httplog
#    stats refresh 30s
#    stats uri /status 
#    stats realm Haproxy Manager
#   stats auth admin:admin

##Rabbitmq cluster HA 
#listen rabbitmq_local_cluster 127.0.0.1:5670 //前段IP，供product和consumer来进行选择，由于5672端口已经默认使用，这里选择5670端口
#     mode tcp   //负载均衡选项
#     balance roundrobin //轮询算法将负载发给后台服务器
#     server rabbit 127.0.0.1:5672 check inter 5000 rise 2 fall 3//负载均衡中的集群节点配置，这里选择的rabbit节点
#
#  listen private_monitoring :8100
#     mode http
#     option httplog
#     stats enable
#     stats uri       /stats
#     stats refresh 60s

 listen dashboard_cluster
  bind <Virtual IP>:89     #80
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:443 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:443 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:443 check inter 2000 rise 2 fall 5

#Note:
#The Galera cluster configuration directive backup indicates that two of the three controllers are standby nodes. This ensures that 
#only one node services write requests because OpenStack support for multi-node writes is not yet production-ready.
 listen galera_cluster
  bind <Virtual IP>:3307 #3306
  balance  source
  option  mysql-check
  server controller1-hostname CONTROLLER1_IP:3306 check port 9200 inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:3306 backup check port 9200 inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:3306 backup check port 9200 inter 2000 rise 2 fall 5

 listen glance_api_cluster
  bind <Virtual IP>:9293  #9292
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:9292 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:9292 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:9292 check inter 2000 rise 2 fall 5

 listen glance_registry_cluster
  bind <Virtual IP>:9194   #9191
  balance  source
  option  tcpka
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:9191 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:9191 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:9191 check inter 2000 rise 2 fall 5

 listen keystone_admin_cluster
  bind <Virtual IP>:35358  #35357
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:35357 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:35357 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:35357 check inter 2000 rise 2 fall 5

 listen keystone_public_internal_cluster
  bind <Virtual IP>:5001  #5000
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:5000 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:5000 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:5000 check inter 2000 rise 2 fall 5

# listen nova_ec2_api_cluster
#  bind <Virtual IP>:8773
#  balance  source
#  option  tcpka
#  option  tcplog
#  server controller1-hostname controller1-hostname_ip:8773 check inter 2000 rise 2 fall 5
#  server controller2-hostname controller2-hostname_ip:8773 check inter 2000 rise 2 fall 5
#  server controller3-hostname controller3-hostname_ip:8773 check inter 2000 rise 2 fall 5

 listen nova_compute_api_cluster
  bind <Virtual IP>:8778   #8774
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:8774 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:8774 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:8774 check inter 2000 rise 2 fall 5

 listen nova_metadata_api_cluster
  bind <Virtual IP>:8777   #8775
  balance  source
  option  tcpka
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:8775 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:8775 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:8775 check inter 2000 rise 2 fall 5

 listen cinder_api_cluster
  bind <Virtual IP>:8779    #8776
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:8776 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:8776 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:8776 check inter 2000 rise 2 fall 5

#Note:
#The Telemetry API service configuration does not have the option httpchk directive as it cannot process this check properly

# listen ceilometer_api_cluster
#  bind <Virtual IP>:8777
#  balance  source
#  option  tcpka
#  option  tcplog
#  server controller1-hostname controller1-hostname_ip:8777 check inter 2000 rise 2 fall 5
#  server controller2-hostname controller2-hostname_ip:8777 check inter 2000 rise 2 fall 5
#  server controller3-hostname controller3-hostname_ip:8777 check inter 2000 rise 2 fall 5

 listen nova_vncproxy_cluster
  bind <Virtual IP>:6081  #6080
  balance  source
  option  tcpka
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:6080 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:6080 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:6080 check inter 2000 rise 2 fall 5

 listen neutron_api_cluster
  bind <Virtual IP>:9697  #9696
  balance  source
  option  tcpka
  option  httpchk
  option  tcplog
  server controller1-hostname CONTROLLER1_IP:9696 check inter 2000 rise 2 fall 5
  server controller2-hostname CONTROLLER2_IP:9696 check inter 2000 rise 2 fall 5
  server controller3-hostname CONTROLLER3_IP:9696 check inter 2000 rise 2 fall 5

#  listen swift_proxy_cluster
#  bind <Virtual IP>:8080
#  balance  source
#  option  tcplog
#  option  tcpka
#  server controller1-hostname controller1-hostname_ip:8080 check inter 2000 rise 2 fall 5
#  server controller2-hostname controller2-hostname_ip:8080 check inter 2000 rise 2 fall 5
#  server controller3-hostname controller3-hostname_ip:8080 check inter 2000 rise 2 fall 5 
