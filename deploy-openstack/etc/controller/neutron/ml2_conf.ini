#this conf file for controller node only 
#In the [ml2] section, enable flat, VLAN, and VXLAN networks

[ml2]
#
# From neutron.ml2
#

# List of network type driver entrypoints to be loaded from the
# neutron.ml2.type_drivers namespace. (list value)
#type_drivers = local,flat,vlan,gre,vxlan,geneve

#type_drivers = flat,vlan,vxlan
type_drivers = local,flat,vlan,gre,vxlan,geneve
#type_drivers = vxlan


#-----------------------------Warning -----------------------------------------
#Once you configure the ML2 plug-in, changing values in thetype_drivers option can lead to database inconsistency

#enable VXLAN self-service networks
#The tenant_network_types option contains no value because the architecture does not support self-service networks.
tenant_network_types = vxlan

#enable the Linux bridge and layer-2 population mechanisms
#mechanism_drivers = linuxbridge,l2population

# An ordered list of networking mechanism driver entrypoints to be loaded from
# the neutron.ml2.mechanism_drivers namespace. (list value)
#mechanism_drivers =
mechanism_drivers = openvswitch,l2population

# Maximum size of an IP packet (MTU) that can traverse the underlying physical
# network infrastructure without fragmentation when using an overlay/tunnel
# protocol. This option allows specifying a physical network MTU value that
# differs from the default global_physnet_mtu value. (integer value)
#path_mtu = 0
path_mtu = 0


#-----------------Warning-------------------------
#After you configure the ML2 plug-in, removing values in the type_drivers option can lead to database inconsistency

#-----------------Note----------------------------
#The Linux bridge agent only supports VXLAN overlay networks

#enable the port security extension driver

# An ordered list of extension driver entrypoints to be loaded from the
# neutron.ml2.extension_drivers namespace. For example: extension_drivers =
# port_security,qos (list value)
#extension_drivers =
extension_drivers = port_security

# Default network type for external networks when no provider attributes are
# specified. By default it is None, which means that if provider attributes are
# not specified while creating external networks then they will have the same
# type as tenant networks. Allowed values for external_network_type config
# option depend on the network type values configured in type_drivers config
# option. (string value)
#external_network_type = <None>

[ml2_type_flat]
#onfigure the provider virtual network as a flat network

#
# From neutron.ml2
#

# List of physical_network names with which flat networks can be created. Use
# default '*' to allow flat networks with arbitrary physical_network names. Use
# an empty list to disable flat networks. (list value)
#flat_networks = *
#flat_networks = provider

[ml2_type_vlan]
#configure the VXLAN network identifier range for self-service networks
#[ml2_type_vxlan]
#vni_ranges = 1:1000

[ml2_type_vlan]

#
# From neutron.ml2
#

# List of <physical_network>:<vlan_min>:<vlan_max> or <physical_network>
# specifying physical_network names usable for VLAN provider and tenant
# networks, as well as ranges of VLAN tags on each available for allocation to
# tenant networks. (list value)
#network_vlan_ranges =
#network_vlan_ranges = provider

[ml2_type_vxlan]

#
# From neutron.ml2
#

# Comma-separated list of <vni_min>:<vni_max> tuples enumerating ranges of
# VXLAN VNI IDs that are available for tenant network allocation (list value)
#vni_ranges =
vni_ranges =100:1000

# Multicast group for VXLAN. When configured, will enable sending all broadcast
# traffic to this multicast group. When left unconfigured, will disable
# multicast VXLAN mode. (string value)
#vxlan_group = <None>
vxlan_group = 224.0.0.1


[securitygroup]
#
# From neutron.ml2
#

# Driver for security groups firewall in the L2 agent (string value)
#firewall_driver = <None>
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver

# Controls whether the neutron security group API is enabled in the server. It
# should be false when using no security groups or using the nova security
# group API. (boolean value)
#enable_security_group = true
enable_security_group = True
